unit FileWork;

interface

type
  TCandysInf = record
    PKey: Integer;
    TypeCandyKet: Integer;
    Name: String[200];
    Cost: Integer;
    Weigth: Real;
  end;

  TCandysAdr = ^TCandys;

  TCandys = record
    Inf: TCandysInf;
    Adr: TCandysAdr;
  end;

  TTypeOfCandysInf = record
    PKey: Integer;
    Name: String[200];
  end;

  TTypeOfCandysAdr = ^TTypeOfCandys;

  TTypeOfCandys = record
    Inf: TTypeOfCandysInf;
    Adr: TTypeOfCandysAdr;
  end;

  procedure SaveToFile(TypeOfCandys: TTypeOfCandysAdr; Road: String); overload;
  function LoadFromFile(var TypeOfCandy: TTypeOfCandysAdr; Road: String)
  : Integer; overload;

implementation

type

  TFileTypeOfCandy = File of TTypeOfCandysInf;
  TFileCandy = File of TCandysInf;

procedure SaveToFile(TypeOfCandys: TTypeOfCandysAdr; Road: String); overload;
var
  Save: TFileTypeOfCandy;
begin
  AssignFile(Save, Road);
  Rewrite(Save);
  While TypeOfCandys^.Adr <> nil do
  begin
    TypeOfCandys := TypeOfCandys^.Adr;
    Write(Save, TypeOfCandys^.Inf);
  end;
  Close(Save);
end;

procedure SaveToFile(Candys: TCandysAdr; Road: String); overload;
var
  Save: TFileCandy;
begin
  AssignFile(Save, Road);
  Rewrite(Save);
  While Candys^.Adr <> nil do
  begin
    Candys := Candys^.Adr;
    Write(Save, Candys^.Inf);
  end;
  Close(Save);
end;

function LoadFromFile(var TypeOfCandy: TTypeOfCandysAdr; Road: String)
  : Integer; overload;
var
  Save: TFileTypeOfCandy;
  temp: TTypeOfCandysAdr;
  Inf: TTypeOfCandysInf;
begin
  AssignFile(Save, Road);
  Reset(Save);
  Result := 0;
  temp := TypeOfCandy;
  While not EOF(Save) do
  begin
    Read(Save, Inf);
    New(temp^.Adr);
    temp := temp^.Adr;
    temp.Inf := Inf;
    if Inf.PKey > Result then
      Result := Inf.PKey;
  end;
  Close(Save);
end;

function LoadFromFile(var Candy: TCandysAdr; Road: String): Integer; overload;
var
  Save: TFileCandy;
  temp: TCandysAdr;
  Inf: TCandysInf;
begin
  AssignFile(Save, Road);
  Reset(Save);
  Result := 0;
  temp := Candy;
  While not EOF(Save) do
  begin
    Read(Save, Inf);
    New(temp^.Adr);
    temp := temp^.Adr;
    temp.Inf := Inf;
    if Inf.PKey > Result then
      Result := Inf.PKey;
  end;
  Close(Save);
end;

end.
